// Code generated by protoc-gen-gorm-dao. DO NOT EDIT.
// source: example_proto/example.proto

package dao_out

import (
	"gorm.io/gorm"
	"time"
)

type ExampleDao struct {
	Id                  string             `json:"id,omitempty" gorm:"autoIncrement"`
	GormTestPrimary     string             `json:"gorm_test_primary,omitempty" gorm:"primaryKey"`
	GormTestInt         int32              `json:"gorm_test_int,omitempty" gorm:"not null"`
	GormTestBigInt      int64              `json:"gorm_test_big_int,omitempty"`
	GormTestString      string             `json:"gorm_test_string,omitempty"`
	GormTestFloat       float32            `json:"gorm_test_float,omitempty"`
	GormTestDouble      float64            `json:"gorm_test_double,omitempty"`
	GormTestIndex       float64            `json:"gorm_test_index,omitempty" gorm:"index"`
	GormTestUniqueIndex float64            `json:"gorm_test_unique_index,omitempty" gorm:"uniqueIndex"`
	Child               *ChildExampleDao   `json:"child,omitempty"`
	ListChilds          []*ChildExampleDao `json:"list_childs,omitempty"`

	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt gorm.DeletedAt
}

func (d *ExampleDao) ToProto() *Example {
	pb := &Example{
		Id:                  d.Id,
		GormTestPrimary:     d.GormTestPrimary,
		GormTestInt:         d.GormTestInt,
		GormTestBigInt:      d.GormTestBigInt,
		GormTestString:      d.GormTestString,
		GormTestFloat:       d.GormTestFloat,
		GormTestDouble:      d.GormTestDouble,
		GormTestIndex:       d.GormTestIndex,
		GormTestUniqueIndex: d.GormTestUniqueIndex,
		Child:               d.Child.ToProto(),
		ListChilds:          make([]*ChildExample, 0, len(d.ListChilds)),
	}

	for _, v := range d.ListChilds {
		pb.ListChilds = append(pb.ListChilds, v.ToProto())
	}

	return pb
}
func (d *ExampleDao) FromProto(v *Example) *ExampleDao {
	*d = ExampleDao{
		Id:                  v.Id,
		GormTestPrimary:     v.GormTestPrimary,
		GormTestInt:         v.GormTestInt,
		GormTestBigInt:      v.GormTestBigInt,
		GormTestString:      v.GormTestString,
		GormTestFloat:       v.GormTestFloat,
		GormTestDouble:      v.GormTestDouble,
		GormTestIndex:       v.GormTestIndex,
		GormTestUniqueIndex: v.GormTestUniqueIndex,
		Child:               (&ChildExampleDao{}).FromProto(v.Child),
		ListChilds:          make([]*ChildExampleDao, 0, len(d.ListChilds)),
	}

	for _, item := range v.ListChilds {
		d.ListChilds = append(d.ListChilds, (&ChildExampleDao{}).FromProto(item))
	}

	return d
}

type ChildExampleDao struct {
	Id string `json:"id,omitempty"`

	CreatedAt time.Time
	UpdatedAt time.Time
	DeletedAt gorm.DeletedAt
}

func (d *ChildExampleDao) ToProto() *ChildExample {
	pb := &ChildExample{
		Id: d.Id,
	}

	return pb
}
func (d *ChildExampleDao) FromProto(v *ChildExample) *ChildExampleDao {
	*d = ChildExampleDao{
		Id: v.Id,
	}

	return d
}
